# en la carpeta dentro de la aplicaciónCorre el servicio en localhost:3000
rails server

#para nueva aplicación 
rails new <appname> --skip-test-unit

#configuracion optima de Gemfile
----------------------------------------------------------------------------------------
source 'https://rubygems.org'
ruby '1.9.3'

gem 'rails', '4.1.1'

group :development, :test do
  gem 'sqlite3', '1.3.8'
  gem 'rspec-rails', '2.13.1'
end

group :test do
  gem 'selenium-webdriver', '2.35.1'
  gem 'capybara', '2.1.0'
end

gem 'sass-rails', '~> 4.0.3'
gem 'uglifier', '>= 1.3.0'
gem 'coffee-rails', '~> 4.0.0'
gem 'jquery-rails'
gem 'turbolinks'
gem 'jbuilder', '~> 2.0'

gem 'sdoc', '~> 0.4.0',          group: :doc

gem 'tzinfo-data', platforms: [:mingw, :mswin]

group :production do
  gem 'pg', '0.15.1'
  gem 'rails_12factor', '0.0.2'
end
--------------------------------------------------------------------------------------------

#Configuracion optima del secret_token.rb
----------------------------------------------------------------------------------------
# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rake secret` to generate a secure secret key.

# Make sure your secret_key_base is kept private
# if you're sharing your code publicly.
require 'securerandom'

def secure_token
  token_file = Rails.root.join('.secret')
  if File.exist?(token_file)
    # Use the existing token.
    File.read(token_file).chomp
  else
    # Generate a new token and store it in token_file.
    token = SecureRandom.hex(64)
    File.write(token_file, token)
    token
  end
end

SampleApp::Application.config.secret_key_base = secure_token
----------------------------------------------------------------------------------------

#para correr la configuracion del Gemfile
bundle update
bundle install

#para heroku nuevo proyecto dentro de la carpeta
heroku create

#hacer commit de cambios
git add -A
git commit

#hacer push de master de git a heroku
git push heroku master

#cambiar de nombre a la app
git remote rm heroku
heroku git:remote -a <nombrenuevo>

#abrir la app
heroku open

#########################Pasos para nueva app en heroku#######################
heroku create
git init
git add .
git commit -am "Reinitialize"
heroku create --stack cedar
git push heroku master
heroku run rake db:migrate
------------------------poner nombre nuevo---------------------
git remote rm heroku
heroku git:remote -a <nombrenuevo>


#autogenerar una app basica
rails generate scaffold User name:string email:string

#This simply updates the database with our new users data model.
bundle exec rake db:migrate

#autogenerar microposts
rails generate scaffold Micropost content:string user_id:integer

#downgrade rails
gem uninstall rails
get install rails --version 4.0.8 --no-ri --no-doc

#In config/environments/development.rb change:
Rails.application.configure do 
#to
SampleApp::Application.configure do
